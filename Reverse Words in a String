QUESTION-
Given an input string s, reverse the order of the words.

A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.

Return a string of the words in reverse order concatenated by a single space.

Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

 

Example 1:

Input: s = "the sky is blue"
Output: "blue is sky the"

SOLUTION--
class Solution {
public:
    string reverseWords(string s) {
        //using stack
        //t.c-> o(n) s.c=o(n)
        if(s.size() == 0) return s;
        stack<string> stack;
        string result;
        for(int i=0; i<s.size(); i++) {
            string word;
            if(s[i]==' ') continue; //we will skip all spaces
            while(i<s.size() && s[i]!=' ' ) { //make a word of continuous letters 
                word += s[i]; i++;
            }
            stack.push(word); 
        }
        while(!stack.empty()) {
            result += stack.top(); stack.pop();
            if(!stack.empty()) result += " ";
        }
        return result;
    }
};
