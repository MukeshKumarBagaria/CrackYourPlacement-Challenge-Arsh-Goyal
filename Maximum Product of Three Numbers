QUESTION-Maximum Product of Three Numbers
Given an integer array nums, find three numbers whose product is maximum and return the maximum product.

 

Example 1:

Input: nums = [1,2,3]
Output: 6


SOLUTION-
class Solution {
public:
    int maximumProduct(vector<int>& nums) {
        //solution1 we can solve using three loop
        
        //solution-2
        //t.c-> o(nlogn) solution 
        // sort(nums.begin(),nums.end());
        // int n=nums.size();
        // int ans;
        // ans=max((nums[0]*nums[1]*nums[n-1]),(nums[n-1]*nums[n-2]*nums[n-3])) ;
        // return ans;
        
        //solution-3
        int n=nums.size();
        int max1=INT_MIN;
        int max2=INT_MIN;
        int max3=INT_MIN;
        int min1=INT_MAX;
        int min2=INT_MAX;
        
        for(int i=0;i<n;i++){
           if(nums[i] <= min1){
				min2 = min1;
				min1 = nums[i];
			} 
			else if(nums[i] <= min2){
				min2 = nums[i];
			}
			if(nums[i] >= max1){ 
				max3 = max2;
				max2 = max1;
				max1 = nums[i];
			} 
			else if(nums[i] >= max2){
				max3 = max2;
				max2 = nums[i];
			} 
			else if(nums[i] >= max3){
				max3 = nums[i];
			}
		}
		return max(min1 * min2 * max1, max1 * max2 * max3);
            
    }
};
