QUESTION-Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.

EX-  [nums = [1,3,4,2,2]]
Output: 2


Solution-
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        //O(n^2) time complexity solution
    //     int n=nums.size();
    //     for(int i=0;i<n;i++){
    //         for(int j=i+1;j<n;j++){
    //             if(nums[i]==nums[j]){
    //                 return nums[i];
    //             }
    //         }
    //     }
    //     return -1;
        
        //time complexity o(n) and space complexity=o(n) solution using unordred set
        // int n=nums.size();
        // unordered_set<int>s;
        // for(int i=0;i<n;i++){
        //  if(s.find(nums[i])==s.end()){
        //     s.insert(nums[i]);
        //  }else return nums[i];
        // }
        // return -1;
        
    ??still trying to get a o(n)t.c and o(1)sc solution
        
     }
};
