QUESTION-Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true



SOLUTION-

class Solution {
public:
    bool isValid(string s) {
        //t.c=o(n) s.c=o(n)
        //edge testcase-  "](){}" mention in the code
        //"{}(){"->to check we are checking at the end st is empty?
        
        stack<char>st;
        for(auto it:s){
            if(it=='('||it=='{'||it=='['){
                st.push(it);
            }else{
               if(st.empty()) return false;     //"](){}" for this type of testcase
                char ch=st.top();
                st.pop();
             if((it==')' and ch=='(') or (it=='}' and ch=='{') or (it==']' and ch=='[')){
                  continue;
              }else{ return false;}
            }
        }
        return st.empty();
        
        
    }
};
