QUESTION- Given an array A[ ] of positive integers of size N, where each value represents the number of chocolates in a packet. Each packet can have a variable number of chocolates. There are M students, the task is to distribute chocolate packets among M students such that :
1. Each student gets exactly one packet.
2. The difference between maximum number of chocolates given to a student and minimum number of chocolates given to a student is minimum.

EX-N = 8, M = 5
A = {3, 4, 1, 9, 56, 7, 9, 12}
Output: 6
Explanation: The minimum difference between 
maximum chocolates and minimum chocolates 
is 9 - 3 = 6 by choosing following M packets :
{3, 4, 9, 7, 9}.



SOLUTION-  
 //SOLUTION IS HAVNG T.C=O(nlog(n)) s.c=o(1)
    long long findMinDiff(vector<long long> a, long long n, long long m){
        sort(a.begin(),a.end());
        int j=1;
        int minDiff=a[m-1]-a[0];
   for(int i=m;i<n;i++){
       if(a[i]-a[j]<minDiff){
           minDiff=a[i]-a[j];
       }
       
       j++;
   }
    return minDiff;
    } 
